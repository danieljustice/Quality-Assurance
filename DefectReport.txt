 
 IDENTIFIER: DEFECT-1
 SUMMARY: Program exits with a stack trace when invalid args are passed into Thread argument.
 DESCRIPTION: When a non-numerical argument is passed into the Threads argument the program breaks and exits with a stack trace. Per the                 requirements the program should notify the user of the invalid argument and then exit gracefully.
 REPRODUCTION STEPS:
          1) Run program with "java -jar .\GoatGoatCar.jar good bad 1000 g" or "java -jar .\GoatGoatCar.jar good bad 1000 1000000000000000"
          2) Program will exit with a stack trace
 EXPECTED BEHAVIOR:The program will prompt the user that an invalid argument was inputed and then gracefully exit.
 OBSERVED BEHAVIOR:The program did not prompt the user and exited with a stack trace.
  
 IDENTIFIER: DEFECT-2
 SUMMARY: Program displays recommended minimum when the user enters "100" iterations.
 DESCRIPTION: When the user specifically enters the number "100" for the iteration input, the program displays a message to the user to enter in a number that is at least 100. This is an off by 1 error.
 REPRODUCTION STEPS:
         1) Run program with "java -jar .\GoatGoatCar.jar good bad 100 10"
 EXPECTED BEHAVIOR: The program should display the correct final output after entering 100.
 OBSERVED BEHAVIOR: The program displays to the user the 
  
 IDENTIFIER: DEFECT-3
 SUMMARY: Program does not accept capital 'N' input option.
 DESCRIPTION: When the program prompts the user for the letters 'N' or 'Y' after inputting an iteration lower than 100, if the user uses capital 'N' it does not accept the input. An error is displayed stating "Sorry, I don't know what N means!"
 REPRODUCTION STEPS:
        1) Run program with "java -jar .\GoatGoatCar.jar good bad 90 10"
        2) When prompted for 'Y' or 'N' input, input the character 'N'.
 EXPECTED BEHAVIOR: The program should quit.
 OBSERVED BEHAVIOR: An error message is displayed to the user. The error explains that the program does not know how to handle the uppercase 'N' character.
  
 IDENTIFIER:DEFECT-4
 SUMMARY: Program does not start if iterations are greater than the 32bit max integer value.
 DESCRIPTION: When the user enters in a number larger than the max 32 bit integer value of 2147483647, the program will not begin even though it's iterations are larger than 0.
 REPRODUCTION STEPS:
          1) Run program with "java -jar .\GoatGoatCar.jar good bad 2500000000 10"
 EXPECTED BEHAVIOR: The program should execute with the iterations that were input.
 OBSERVED BEHAVIOR: The program asks the user to input an integer number greater than zero.

 IDENTIFIER:DEFECT-5
 SUMMARY: The program runs slower with more threads.
 DESCRIPTION: When the user runs the program twice with a speed measuring technique, the run a larger amount of threads takes much longer.
 REPRODUCTION STEPS:
           1) Enter Measure-Command {java -jar good bad 100000 10}
           2) Enter Measure-Command {java -jar good bad 100000 100000}
           3) Compare the speeds. The first speed is around 392 ms. The second is around 8075ms.
 EXPECTED BEHAVIOR: The second run of the program should be faster.
 OBSERVED BEHAVIOR: The first run of the program is faster.
